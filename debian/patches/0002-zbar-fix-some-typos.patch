From: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
Date: Thu, 14 Feb 2019 07:10:57 -0200
Subject: zbar: fix some typos

Applied-Upstream: https://github.com/mchehab/zbar/commit/d27ea213fc0ceb44fe1a244d27ee86dbd0a3881d

Use Linux Kernel's checkpatch.pl script to detect and fix
some typos:
	../kernel/checkpatch.pl --test-only=misspelled --codespellfile ../kernel/scripts/spelling.txt $(find . -name *.h) $(find . -name *.c) $(find . -name *.cpp) --fix-inplace

Reported-by: Boyuan Yang
Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
---
 include/zbar.h           | 4 ++--
 include/zbar/Processor.h | 2 +-
 zbar/decoder/code128.c   | 2 +-
 zbar/processor.h         | 2 +-
 zbar/qrcode/qrdec.c      | 2 +-
 zbarimg/zbarimg.c        | 2 +-
 6 files changed, 7 insertions(+), 7 deletions(-)

diff --git a/include/zbar.h b/include/zbar.h
index de5dec6..5ef8fab 100644
--- a/include/zbar.h
+++ b/include/zbar.h
@@ -924,7 +924,7 @@ static inline int zbar_processor_parse_config (zbar_processor_t *processor,
            zbar_processor_set_config(processor, sym, cfg, val));
 }
 
-/** retrieve the current state of the ouput window.
+/** retrieve the current state of the output window.
  * @returns 1 if the output window is currently displayed, 0 if not.
  * @returns -1 if an error occurs
  */
@@ -987,7 +987,7 @@ extern int zbar_process_image(zbar_processor_t *processor,
                               zbar_image_t *image);
 
 /** enable dbus IPC API.
- * @returns 0 succesful
+ * @returns 0 successful
  */
 int zbar_processor_request_dbus(zbar_processor_t *proc,
                                 int req_dbus_enabled);
diff --git a/include/zbar/Processor.h b/include/zbar/Processor.h
index 2622ee8..cb99adf 100644
--- a/include/zbar/Processor.h
+++ b/include/zbar/Processor.h
@@ -101,7 +101,7 @@ class Processor {
         return(zbar_processor_parse_config(_processor, cfgstr.c_str()));
     }
 
-    /// retrieve the current state of the ouput window.
+    /// retrieve the current state of the output window.
     /// see zbar_processor_is_visible()
     bool is_visible ()
     {
diff --git a/zbar/decoder/code128.c b/zbar/decoder/code128.c
index 9dd28e0..bd1ae12 100644
--- a/zbar/decoder/code128.c
+++ b/zbar/decoder/code128.c
@@ -283,7 +283,7 @@ static inline unsigned postprocess_c (zbar_decoder_t *dcode,
 {
     unsigned i, j;
 
-    /* expand buffer to accomodate 2x set C characters (2 digits per-char) */
+    /* expand buffer to accommodate 2x set C characters (2 digits per-char) */
     unsigned delta = end - start;
     unsigned newlen = dcode->code128.character + delta;
     if (size_buf(dcode, newlen)) {
diff --git a/zbar/processor.h b/zbar/processor.h
index e311d98..d5e9fef 100644
--- a/zbar/processor.h
+++ b/zbar/processor.h
@@ -56,7 +56,7 @@ typedef struct proc_waiter_s {
 /* high-level API events */
 #define EVENT_INPUT     0x01            /* user input */
 #define EVENT_OUTPUT    0x02            /* decoded output data available */
-#define EVENT_CANCELED  0x80            /* cancelation flag */
+#define EVENT_CANCELED  0x80            /* cancellation flag */
 #define EVENTS_PENDING  (EVENT_INPUT | EVENT_OUTPUT)
 
 struct zbar_processor_s {
diff --git a/zbar/qrcode/qrdec.c b/zbar/qrcode/qrdec.c
index 5d3d265..2bf7e07 100644
--- a/zbar/qrcode/qrdec.c
+++ b/zbar/qrcode/qrdec.c
@@ -531,7 +531,7 @@ static void qr_line_fit(qr_line _l,int _x0,int _y0,
   v=-_sxy<<1;
   w=qr_ihypot(u,v);
   /*Computations in later stages can easily overflow with moderate sizes, so we
-     compute a shift factor to scale things down into a managable range.
+     compute a shift factor to scale things down into a manageable range.
     We ensure that the product of any two of _l[0] and _l[1] fits within _res
      bits, which allows computation of line intersections without overflow.*/
   dshift=QR_MAXI(0,QR_MAXI(qr_ilog(u),qr_ilog(abs(v)))+1-(_res+1>>1));
diff --git a/zbarimg/zbarimg.c b/zbarimg/zbarimg.c
index b354747..171c555 100644
--- a/zbarimg/zbarimg.c
+++ b/zbarimg/zbarimg.c
@@ -131,7 +131,7 @@ static const char *warning_not_found =
     "    some EAN/UPC codes are disabled by default. To enable all, use:\n"
     "    $ zbarimg -S*.enable <files>\n"
     "    Please also notice that some variants take precedence over others.\n"
-    "    Due to that, if you want, for example, ISBN-10, you shoud do:\n"
+    "    Due to that, if you want, for example, ISBN-10, you should do:\n"
     "    $ zbarimg -Sisbn10.enable <files>\n"
     "\n";
 
